#1.将1字典化，在2中使用字典
class Solution(object):
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        if len(nums1) == 0 or len(nums2) == 0:
            return []
        dic ={}
        result = []
        for val in nums1:
            if dic.has_key(val):
                dic[val] += 1
            else:
                dic[val] = 1
        for val in nums2:
            if dic.has_key(val) and dic[val] > 0:
                result.append(val)
                dic[val] -= 1
        return result


#2.使用字典，分别将1.2字典化，再将字典求交集
class Solution:
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        if not nums1 or not nums2:
            return []
        dic1 = {}
        dic2 = {}
        for i in nums1:
            if i in dic1:
                dic1[i] += 1
            else:
                dic1[i] = 1
        for i in nums2:
            if i in dic2:
                dic2[i] += 1
            else:
                dic2[i] = 1
        res = []
        for i in dic1:
            if i in dic2:
                cnt = min(dic1[i], dic2[i])
                for j in range(cnt):
                    res.append(i)
        return res 
        
#3.笨办法，依次比较
class Solution:
    def intersect(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """
        res = []
        for num1 in nums1:
            for i in range(len(nums2)):
                if num1 == nums2[i]:
                    nums2.pop(i)
                    res.append(num1)
                    break
        return res
