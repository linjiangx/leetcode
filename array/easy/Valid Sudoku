#需要掌握二维数组创建a=[[0 for x in range(10)] for y in range(10)]
#掌握列表替换：rep = ['4' if x == '1' else x for x in lst]，将List里面的1替换为4
class Solution(object):
    def isValidSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: bool
        """
        
        data = set()
        for i in range(9):
            for j in range(9):
                if board[i][j] != '.':
                    cur = board[i][j]
                    if (i, cur) in data or (cur, j) in data or (i/3, j/3, cur) in data:
                        return False
                    data.add((i, cur))
                    data.add((cur, j))
                    data.add((i/3, j/3, cur))                  
        return True
                        
#这个可读性更高
def isValidSudoku(self, board):
    return (self.is_row_valid(board) and
            self.is_col_valid(board) and
            self.is_square_valid(board))

def is_row_valid(self, board):
    for row in board:
        if not self.is_unit_valid(row):
            return False
    return True

def is_col_valid(self, board):
    for col in zip(*board):
        if not self.is_unit_valid(col):
            return False
    return True
    
def is_square_valid(self, board):
    for i in (0, 3, 6):
        for j in (0, 3, 6):
#这个地方值得参考来处理二维数组        
            square = [board[x][y] for x in range(i, i + 3) for y in range(j, j + 3)]
            if not self.is_unit_valid(square):
                return False
    return True
    
def is_unit_valid(self, unit):
#这里直接将'.'给丢掉了
    unit = [i for i in unit if i != '.']
    return len(set(unit)) == len(unit)
