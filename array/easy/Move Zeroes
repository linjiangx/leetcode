#需要考虑特殊情况：连续的0
class Solution:
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        i = 0
        k = 0
        while i < len(nums)-1 and k<len(nums):
            if nums[i]==0:
                nums.pop(i)
                nums.append(0)
            else:
                i+=1
            k+=1

#traverse and swap last 0 and last non 0
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        last0 = 0
        for i in range(0,len(nums)):
            if (nums[i]!=0):
                nums[i],nums[last0] = nums[last0],nums[i]
                last0+=1
                
#use sort() with customized compare function，使用特殊的排序方法
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        nums.sort(cmp=lambda a,b: 0 if b else -1)


