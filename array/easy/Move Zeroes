#需要考虑特殊情况：连续的0
#时间复杂度N，空间复杂度0
class Solution:
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        le = len(nums)
        i = 0
        while i < le:
            if nums[i] == 0:
                nums.pop(i)
                nums.append(0)
                le -= 1
            else:
                i += 1

#将数组里非空的值往前面搬运
#时间N，空间0
class Solution:
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        i = 0
        for num in nums:
            if num:
                nums[i] = num
                i += 1
        for j in range(i, len(nums)):
            nums[j] = 0
            
#traverse and swap last 0 and last non 0,记录最近的0位置并与当前的非0位置交换
#时间N，空间0
class Solution(object):
    def moveZeroes(self, nums):
        last0 = 0
        for i in range(len(nums)):
            if (nums[i]!=0):
                nums[i],nums[last0] = nums[last0],nums[i]
                last0+=1
                



