#
class Trie(object):
    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.mapping = {}

    def insert(self, word):
        """
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """
        if word[0] in self.mapping:
            self.mapping[word[0]].append(word)
        else:
            self.mapping[word[0]] = [word]

    def search(self, word):
        """
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """
        if word[0] in self.mapping:
            if word in self.mapping[word[0]]:
                return True
            else:
                return False
        else:
            return False

    def startsWith(self, prefix):
        """
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """
        if prefix[0] in self.mapping:
            for word in self.mapping[prefix[0]]:
                if word[0:len(prefix)] == prefix and len(prefix) <= len(word):
                    return True
            return False
        else:
            return False
#

#
#
#
