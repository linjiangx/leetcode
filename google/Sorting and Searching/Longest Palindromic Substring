#
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        if len(s)<2 or s==s[::-1]:
            return s
        n=len(s)
        start,max_len=0,1
        for i in range(1,n):
            odd=s[i-max_len-1:i+1]
            even=s[i-max_len:i+1]
            if i-max_len-1>=0 and odd==odd[::-1]:
                start=i-max_len-1
                max_len+=2
                continue
            if i-max_len>=0 and even==even[::-1]:
                start=i-max_len
                max_len+=1
            
        return s[start:start+max_len]
#

class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        maxLen = 1
        start = 0
        
        
        for i in xrange(len(s)):
            if i - maxLen >= 1 and s[i-maxLen-1 : i+1] == s[i-maxLen-1:i+1][::-1]:
                start = i-maxLen-1
                maxLen += 2
            if i - maxLen >= 0 and s[i-maxLen: i+1] == s[i-maxLen:i+1][::-1]:
                start = i-maxLen
                maxLen += 1
                
        return s[start:start+maxLen]
#
#
