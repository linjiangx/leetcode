#
#
class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        def update(i,k,dp,mod):
            if k != 0:
                dp[i][k] += 1 if i==0 else sum(dp[i-1])
            if i > 0:
                for prev_num in [1,2]:
                    if dp[i-1][prev_num] == 0:
                        continue
                    if 10<=10*prev_num+int(k)<=26:
                        dp[i][k] += sum(dp[i-2]) if i >= 2 else 1
            dp[i][k] %= mod
        
        mod = 10**9+7
        dp = [[0]*10  for i in range(len(s))]
        for i in range(len(s)):
            if s[i].isdigit():
                update(i,int(s[i]),dp,mod)
            else:
                for k in range(1,10):
                    update(i,k,dp,mod)

        return sum(dp[-1])%mod
                        
