#
class Solution:
    """
    @param prices: Given an integer array
    @return: Maximum profit
    """
    def maxProfit(self, prices):
        # write your code here
        n = len(prices)
        if n <= 1:
            return 0
        p1 = [0] * n
        p2 = [0] * n
        
        minV = prices[0]
        for i in range(1,n):
            minV = min(minV, prices[i]) 
            p1[i] = max(p1[i - 1], prices[i] - minV)
        
        maxV = prices[-1]
        for i in range(n-2, -1, -1):
            maxV = max(maxV, prices[i])
            p2[i] = max(p2[i + 1], maxV - prices[i])
        
        res = 0
        for i in range(n):
            res = max(res, p1[i] + p2[i])
        return res
#
class Solution:
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """

        
        if len(prices)==0 or len(prices)==1:
            return 0
        
        buy1,buy2=-prices[0],-prices[0]
        sell1,sell2=0,0
        
        for price in prices[1:]:
            buy1=max(buy1,-price)
            sell1=max(sell1,price+buy1)
            
            buy2=max(buy2,sell1-price)     #profit for last transaction is sell1
            sell2=max(sell2,price+buy2)
        
        return sell2
