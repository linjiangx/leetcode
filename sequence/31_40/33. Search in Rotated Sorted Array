#
#注意从中间划分时，左右必然有一边是有序的
class Solution:
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if not nums:
            return -1
        left, right = 0, len(nums) - 1
        while left <= right:
            mid = (left + right) // 2
            if nums[mid] == target:
                return mid
            elif nums[left] <= target < nums[mid]:
                right = mid - 1
            elif nums[mid] < target <= nums[right]:
                left = mid + 1
            elif nums[mid] > nums[right]: #left is ordered, right is disordered
                left = mid + 1
            elif nums[mid] < nums[left]:
                right = mid - 1
            elif nums[right] < target: #huozhe elif nums[mid] < target:所有值都比target小
                left = mid + 1
            else: #所有值都比target大
                right = mid - 1
        return -1
                
                
                
                
