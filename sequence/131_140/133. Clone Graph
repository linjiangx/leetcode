##
#
class Solution:
    def cloneGraph(self, node):
        if not node:
            return None

        new_node = UndirectedGraphNode(node.label)
        queue_1, queue_2, dict = [node], [new_node], {node: new_node}

        while queue_1:
            cur = queue_1.pop(0)
            tmp = queue_2.pop(0)
            for nei in cur.neighbors:
                if nei not in dict:
                    new_nei = UndirectedGraphNode(nei.label)
                    tmp.neighbors.append(new_nei)
                    dict[nei] = new_nei
                    queue_1.append(nei)
                    queue_2.append(new_nei)
                else:
                    tmp.neighbors.append(dict[nei])

        return new_node
