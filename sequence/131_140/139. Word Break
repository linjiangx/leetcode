##
#

class Solution:
    def wordBreak(self, s: 'str', wordDict: 'List[str]') -> 'bool':
        """
        abc {ab, c}
        ab c
        
        aac {a, d}
        x
        
        aac {a, c}
        a a c
        list of flags to track s[:i] can be segmented f[0] = True return f[len(s)]
        starting from index 1, expand to left all the way to end
        when f[i-j] and s[i - j:i] in dict: we save f[i-j] = True and break
        """

        if len(wordDict) == 0:
            return len(s) == 0
            
        n = len(s)
        f = [False] * (n + 1)
        f[0] = True
        
        maxLength = max([len(w) for w in wordDict])
        for i in range(1, n + 1):
            for j in range(1, min(i, maxLength) + 1):
                if not f[i - j]:
                    continue
                if s[i - j:i] in wordDict:
                    f[i] = True
                    break
        
        return f[n]
