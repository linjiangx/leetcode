
##
class Solution:
    def reversePairs(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
        tmp = [0] * len(nums)
        res = self.merge_sort_count(nums, 0, len(nums) - 1)
        return res

    def merge_sort_count(self, nums, st, end):
        if st == end:
            return 0
        mid = (end + st) / 2
        cnt = 0
        cnt += self.merge_sort_count(nums, st, mid)
        cnt += self.merge_sort_count(nums, mid + 1, end)

        i, j = st, mid + 1
        while i <= mid and j <= end:
            if nums[i] > nums[j] * 2:
                cnt += mid + 1 - i
                j += 1
            else:
                i += 1
        nums[st:end + 1] = sorted(nums[st:end + 1])
        return cnt
