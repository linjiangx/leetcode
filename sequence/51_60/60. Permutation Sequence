#
#
import math

class Solution(object):
    
    def getPermutation(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: str
        """
        nums = [i for i in range(1, n + 1)]
        k -= 1 # So the index starts from 0.
        result = ""
        
        while n > 1:
            step = math.factorial(n) / n # How big are the groups with the same first digit.
            # i = Index of the k-th group.
            i = int(k //step)
            k -= i *step
            n -= 1                       # k = Relative position within the next group of permutations made out of digits excluding nums[i].
            result += str(nums[i])
            del nums[i]
        result += str(nums[0])
        return result
