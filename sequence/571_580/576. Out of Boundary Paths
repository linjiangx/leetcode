#
#
class Solution(object):
    def findPaths(self, m, n, N, i, j):
        mod = 10**9 + 7
        cache = collections.defaultdict(int)
        def helper(i,j,N):
            # 记忆化思想
            if (i,j,N) in cache:
                return cache[(i,j,N)]
            #i,j在网格内情况
            if 0<=i<m and 0<=j<n:
                if N == 0:
                    cache[(i,j,N)] = 0
                    return cache[(i,j,N)]

                for x,y in [(i+1,j),(i-1,j),(i,j+1),(i,j-1)]:
                    cache[(i,j,N)] += helper(x,y,N-1)
                return cache[(i,j,N)] % mod
            # 网格外情况
            else:
                cache[(i,j,N)] = 1
                return cache[(i,j,N)]
        return helper(i,j,N) % mod
