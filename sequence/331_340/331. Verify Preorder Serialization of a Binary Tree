#
#
class Solution(object):
    def isValidSerialization(self, preorder):
        stack = []
        tokens = preorder.split(",")
        i, tot = 0, len(tokens)
        if tot == 1 and tokens[0] == "#":  # if it's an empty tree
            return True
        while i < tot:
            if tokens[i].isnumeric():
                stack.append(tokens[i])
            else:  # if we encounter a "#"
                if len(stack) == 0:  # check if the leaf has a parent
                    return False
                stack.pop()
                if len(stack) == 0 and i + 1 == tot - 1 and tokens[i + 1] == "#":
                    return True
            i += 1
        return False
'''
in fact # represents a leaf node, when we see a leaf, it means we have reached the bottom during the tree traversal, and we should pop its parent
after doing the above again and again, finally, we'll have only a leaf node(the right child) to check, and the stack should be empty
'''
