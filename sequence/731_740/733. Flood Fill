#
#
class Solution(object):
    def floodFill(self, image, sr, sc, newColor):
        """
        :type image: List[List[int]]
        :type sr: int
        :type sc: int
        :type newColor: int
        :rtype: List[List[int]]
        """
        # BFS
        m = len(image)
        n = len(image[0])
        oldColor = image[sr][sc]
        if oldColor == newColor:
            return image

        dxs = [-1, 0, 1, 0]
        dys = [0, 1, 0, -1]

        queue = collections.deque()
        queue.append((sr, sc))

        while queue:
            x, y = queue.popleft()
            image[x][y] = newColor

            for dx, dy in zip(dxs, dys):
                nx = x + dx
                ny = y + dy
                if 0 <= nx < m and 0 <= ny < n and image[nx][ny] == oldColor:
                    queue.append((nx, ny))

        return image
