#
#
class Solution(object):
    def groupStrings(self, strings):
        """
        :type strings: List[str]
        :rtype: List[List[str]]
        """
        hashmap = dict()
        
        for string in strings:
		#handle single character
            if len(string) == 1:
                if not "-1" in hashmap:
                    hashmap["-1"] = [string]
                else:
                    hashmap["-1"].append(string)
            else:
                pattern = ""
				#calculate pattern
                for i in range(1,len(string)):
					#mod is to handle cyclic shifting like "az","ba"
                    pattern+=str( (ord(string[i])+26-ord(string[i-1])) % 26   )
                    
                if not pattern in hashmap:
                    hashmap[pattern] = [string]
                else:
                    hashmap[pattern].append(string)
        #print hashmap
        return hashmap.values()
