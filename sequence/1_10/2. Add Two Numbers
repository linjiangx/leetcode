#python,补0法
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        cur = head = ListNode(0)
        a, b = l1, l2
        len1 = len2 = 1
        while a.next:
            a = a.next
            len1 += 1
        while b.next:
            b = b.next
            len2 += 1
        flag = 0
        if len1 < len2:
            for i in range(len2 - len1):
                a.next = ListNode(0)
                a = a.next
        else:
            for i in range(len1 - len2):
                b.next = ListNode(0)
                b = b.next
        for i in range(max(len1,len2)):
            res = l1.val + l2.val + flag
            if res >= 10:
                res -= 10
                flag = 1
            else:
                flag = 0
            l1 = l1.next
            l2 = l2.next
            node = ListNode(res)
            cur.next = node
            cur = node
        if flag:
            cur.next = ListNode(1)
        return head.next
#python, trick
class Solution:
    def addTwoNumbers(self, l1, l2):
        dummy = cur = ListNode(0)
        flag = 0
        while l1 or l2 or flag:
            if l1:
                flag += l1.val
                l1 = l1.next
            if l2:
                flag += l2.val
                l2 = l2.next
            cur.next = ListNode(flag % 10)
            cur = cur.next
            flag //= 10
        return dummy.next
#java
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        int flag = 0;
        while(l1 != null || l2 != null || flag > 0){
            if(l1 != null){
                flag += l1.val;
                l1 = l1.next;
            }
            if(l2 != null){
                flag += l2.val;
                l2 = l2.next;
            }
            cur.next = new ListNode(flag % 10);
            cur = cur.next;
            flag /= 10;
        }
        return dummy.next;
    }
}
