class Solution:
    def findMedianSortedArrays(self, nums1, nums2):
        l1, l2 = len(nums1), len(nums2)
        if l1 > l2:
            nums1, nums2 = nums2, nums1
            l1, l2 = l2, l1
        left, right = 0, l1
        half_len = (l1 + l2) // 2
        while left <= right:
            p1 = (left + right) // 2
            p2 = half_len - p1
            if p1 > 0 and nums1[p1 - 1] > nums2[p2]:
                right = p1 - 1
            # 这里用p1来控制，而不用p2>0来控制
            # 因为就算p2>0，也会出现p1==l1的情况，导致报错
            elif p1 < l1 and nums1[p1] < nums2[p2 - 1]:
                left = p1 + 1
            else:
                if p1 == 0:
                    max_left = nums2[p2 - 1]
                elif p2 == 0:
                    max_left = nums1[p1 - 1]
                else:
                    max_left = max(nums1[p1 - 1], nums2[p2 - 1])
                if p1 == l1:
                    min_right = nums2[p2]
                elif p2 == l2:
                    min_right = nums1[p1]
                else:
                    min_right = min(nums1[p1], nums2[p2])
                if (l1 + l2) % 2 == 0:
                    return (max_left + min_right)/2
                else:
                    return min_right
