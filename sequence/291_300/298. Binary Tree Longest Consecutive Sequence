
##
class Solution(object):
    #[1,null,3,2,4,null,null,null,5]
    #[1,2,null,3,null,0,null,1]
    def longestConsecutive(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        res = [0]
        self.helper(root,res)
        return res[0]
        
    def helper(self,root,res):
        if not root:
            return 0
        else:
            length_left = self.helper(root.left,res)
            length_right = self.helper(root.right,res)
            #print length_left,length_right
            if length_left > 0 and root.val+1 == root.left.val:
                length_left+=1
            else:
                length_left=0
            if length_right > 0 and root.val+1 == root.right.val:
                length_right+=1
            else:
                length_right = 0
            local_max = max(length_right,length_left,1)
            res[0] = max(local_max,res[0])
            return local_max
