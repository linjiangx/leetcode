#
#
class Solution(object):
    def wordPatternMatch(self, pattern, str):
        """
        :type pattern: str
        :type str: str
        :rtype: bool
        """
        def dfs(p,s,d):
            if len(p) == 0 and len(s) == 0:
                return True
            if len(p) == 0 and len(s) != 0:
                return False
            for j in range(1,len(s)-len(p)+2):
                if p[0] not in d and s[:j] not in d.values():
                    d[ p[0] ] = s[:j]
                    if dfs(p[1:], s[j:], d):
                        return True
                    d.pop(p[0])
                elif p[0] in d:
                    if d[ p[0] ] == s[:j] and dfs(p[1:], s[j:], d):
                        return True
            return False
        d = {}
        return dfs(pattern, str, d)
