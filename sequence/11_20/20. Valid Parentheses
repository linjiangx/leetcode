#Runtime: 32 ms, faster than 100.00% of Python3 online submissions for Valid Parentheses.
#
#
class Solution:
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        res = []
        for x in s:
            if x in ['(','[','{']:
                res.append(x)
            else:
                if len(res) == 0:
                    return False
                cur = res.pop()
                if x == ')' and cur == '(':
                    continue
                elif x == ']' and cur == '[':
                    continue
                elif x == '}' and cur == '{':
                    continue
                else:
                    return False
        if len(res) == 0:
            return True
        return False
        
class Solution:
    def isValid(self, s: 'str') -> 'bool':
        v = []
        d = {']':'[', ')':'(', '}':'{'}
        for i in range(len(s)):
            if s[i] in d.values():
                v.append(s[i])
            elif s[i] in d.keys():
                if len(v) == 0:
                    return False
                elif v[-1] == d[s[i]]:
                    v.pop()
                else:
                    return False
        if v == []:
            return True
        else:
            return False
