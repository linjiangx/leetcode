#
#
from collections import deque


class SnakeGame:

    def __init__(self, width: 'int', height: 'int', food: 'List[List[int]]'):
        """
        Initialize your data structure here.
        @param width - screen width
        @param height - screen height
        @param food - A list of food positions
        E.g food = [[1,1], [1,0]] means the first food is positioned at [1,1], the second is at [1,0].
        """
        self.board = {}
        self.board[(0, 0)] = 1
        self.food = food
        self.width = width
        self.height = height
        self.cur = 0
        self.snake = deque([(0, 0)])

    def move(self, direction: 'str') -> 'int':
        """
        Moves the snake.
        @param direction - 'U' = Up, 'L' = Left, 'R' = Right, 'D' = Down
        @return The game's score after the move. Return -1 if game over.
        Game over when snake crosses the screen boundary or bites its body.
        """
        head = self.snake[-1]
        if direction == 'R':
            nhead = (head[0], head[1] + 1)
            if nhead[1] > self.width - 1:
                return -1
        elif direction == 'L':
            nhead = (head[0], head[1] - 1)
            if nhead[1] < 0:
                return -1
        elif direction == 'U':
            nhead = (head[0] - 1, head[1])
            if nhead[0] < 0:
                return -1
        else:
            nhead = (head[0] + 1, head[1])
            if nhead[0] > self.height - 1:
                return -1
        if self.cur < len(self.food) and nhead[0] == self.food[self.cur][0] and nhead[1] == self.food[self.cur][1]:
            self.cur += 1
        else:
            lastone = self.snake.popleft()
            self.board.pop((lastone[0], lastone[1]))
            if nhead in self.board:
                return -1
        self.snake.append(nhead)
        self.board[nhead] = 1
        return self.cur
