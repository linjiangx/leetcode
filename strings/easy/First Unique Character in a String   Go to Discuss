#题目规定只有小写字母
class Solution(object):
    def firstUniqChar(self, s):

        minIndex = len(s)
        for c in "abcdefghijklmnopqrstuvwxyz":
            l = s.find(c)
            r = s.rfind(c)
            if l != -1 and l == r:
                minIndex = min(minIndex, l)

        return minIndex if minIndex < len(s) else -1


        
#字典的方法，如果没有重复就给当前坐标值，重复的话给-1
class Solution(object):
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        n = len(s)
        dic = {}
        for i in range(n):
            if s[i] not in dic:
                dic[s[i]] = i
            else:
                dic[s[i]] = -1
        res = list(filter(lambda x: x >= 0, dic.values()))
        return min(res) if res else -1

#不使用lambda
class Solution:
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        le=len(s)
        dic={}
        for i in range(le):
            if s[i] not in dic:
                dic[s[i]]=i
            else:
                dic[s[i]]=-1
        lis=[]
        for a in dic:
            if dic[a]>=0:
                lis.append(dic[a])
        return min(lis) if lis else -1
