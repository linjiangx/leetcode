#判断回文字符串，只考虑字母，不考虑空格等其他字符
class Solution:
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        new = ''.join([i for i in s if i.isalnum()]).lower()
        return new == new[::-1]
        
#
class Solution:
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        le=len(s)
        k=[]
        for i in range(le):
            if 48<=ord(s[i])<=57 or 65<=ord(s[i])<=90 or 97<=ord(s[i])<=122:
                k.append(s[i].lower())
        return k==k[::-1]

#
class Solution(object):
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        if not s or len(s) == 0:
            return True
        lst = [c for c in s.lower() if c.isalnum()]
        return lst == lst[::-1]

#
class Solution:
    def isPalindrome(self, s):
        """
        :type s: str
        :rtype: bool
        """
        news=[i.lower() for i in s if i.isalnum()]
        return news==news[::-1]
