#1.先生成字典，再判断字典是否一样，顺序是：长度、键、键值
class Solution:
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        dic1={}
        for i in s:
            if i not in dic1:
                dic1[i]=1
            else:
                dic1[i]+=1
        dic2={}
        for i in t:
            if i not in dic2:
                dic2[i]=1
            else:
                dic2[i]+=1
        res=True
        if len(dic1)!=len(dic2):
            res=False
        for i in dic1:
            if i not in dic2:
                res=False
            else:
                if dic1[i]!=dic2[i]:
                    res=False
        return res

#2.一行代码，排序
return True if s is None or t is None else sorted(s) == sorted(t)

#3.统计所有26字母的数量，都一样就正确
class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        n = len(s)
        if len(t)!=n:
            return False 
        letters = 'abcdefghijklmnopqrstuvwxyz'
        for l in letters:
            if s.count(l)!=t.count(l):
                return False
        return True

