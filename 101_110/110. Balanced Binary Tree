#O(nlogn) 
class Solution(object):
    def isBalanced(self, root):
        if not root: return True
        left = self.get_height(root.left)
        right = self.get_height(root.right)
        if abs(left - right) > 1: 
            return False  
        return self.isBalanced(root.left) and self.isBalanced(root.right)

        
    def get_height(self, root):
        if not root: return 0
        left = self.get_height(root.left)
        right = self.get_height(root.right)
        return max(left, right) + 1
#
#O(N)
class Solution(object):
    def isBalanced(self, root):
        if not root: return True
        self.flag = False
        self.getHeight(root)
        return not self.flag

    def getHeight(self, root):
        if not root: return 0
        left = self.getHeight(root.left)
        right = self.getHeight(root.right)

        if abs(left - right) > 1 or self.flag:
            self.flag = True
        return max(left, right) + 1
