#
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def hasCycle(self, head):
        """
        :type head: ListNode
        :rtype: bool
        """
        if head==None:
            return False
        a=head
        b=head
        while head:
            if a:
                a=a.next
            else:
                return False
            if b and b.next:
                b=b.next.next
            else:
                return False
            if a==b:
                return True
           
        return False
        
#
#
