#
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        l3=ListNode(0)
        head=l3
        flag=0
        while l1 and l2:
            r=l1.val+l2.val+flag
            if r>=10:
                l=ListNode(r-10)
                flag=1
            else:
                l=ListNode(r)
                flag=0
            l1=l1.next
            l2=l2.next
            l3.next=l
            l3=l
        while l1:
            if l1.val+flag==10:
                l=ListNode(0)
                l3.next=l
                l3=l
                flag=1
                l1=l1.next
            else:
                l1.val+=flag
                flag=0
                l3.next=l1
                break
        while l2:
            if l2.val+flag==10:
                l=ListNode(0)
                l3.next=l
                l3=l
                flag=1
                l2=l2.next
            else:
                l2.val+=flag
                flag=0
                l3.next=l2
                break
        if flag:
            l3.next=ListNode(1)    
        return head.next
        
                
#
#
#
